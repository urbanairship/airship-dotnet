name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

env:
  DEVELOPER_DIR: /Applications/Xcode_16.0.app/Contents/Developer
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1

jobs:
  release:
    permissions:
      contents: write
    runs-on: macOS-15
    steps:
      - uses: actions/checkout@v4

      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Verify Version
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          PLUGIN_VERSION=$(./gradlew -q getVersion)
          if [[ $PLUGIN_VERSION = $VERSION ]]; then exit 0 ; else exit 1; fi

      - name: Get the release notes
        id: get_release_notes
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          delimiter="$(openssl rand -hex 8)"
          {
            echo "NOTES<<${delimiter}"
            awk "/## Version $VERSION/{flag=1;next}/## Version/{flag=0}flag" CHANGELOG.md
            echo ${delimiter}
          } >> $GITHUB_OUTPUT

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      # - name: Setup GCP Auth
      #   uses: google-github-actions/auth@v1
      #   with:
      #     credentials_json: ${{ secrets.GCP_SA_KEY }}

      # # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      # - name: Set up Google Cloud SDK
      #   uses: google-github-actions/setup-gcloud@v1

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Restore workloads
        run: |
          dotnet workload install android ios maui-android maui-ios maui-maccatalyst

      # - name: Install doc dependencies
      #   run: |
      #     brew install doxygen
      #     brew install graphviz

      - name: Build and Publish Nugets
        env:
          NUGET_PRODUCTION_API_KEY: ${{ secrets.NUGET_PRODUCTION_API_KEY }}
        run: ./gradlew build pack publishToProduction
        #run: ./gradlew build pack packageDocs
        
      - name: Create Github Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.get_release_notes.outputs.NOTES }}
          draft: false
          prerelease: false

      # - name: Upload Docs
      #   run: |
      #     VERSION=${{ steps.get_version.outputs.VERSION }}
      #     gsutil cp docs/build/$VERSION.tar.gz gs://ua-web-ci-prod-docs-transfer/libraries/maui/$VERSION.tar.gz

